"use strict";
self["webpackHotUpdatetest_storybook_avig_dev"]("stories-Buttons-Button-stories",{

/***/ "./src/stories/Breadcrumbs/Breadcrumb.tsx":
/*!************************************************!*\
  !*** ./src/stories/Breadcrumbs/Breadcrumb.tsx ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Breadcrumb: () => (/* binding */ Breadcrumb)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _breadcrumb_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./breadcrumb.css */ "./src/stories/Breadcrumbs/breadcrumb.css");


const Breadcrumb = ({ data, isCurrentPage })=>{
    /*   const [breadCrumbs, setBreadcrumbs] = useState<Breadcrumb[]>([]);
   */ /*  useEffect(() => {
    const breadCrumbsData: Breadcrumb[] = [
      { label: "Home", path: "/" },
      { label: "About", path: "/about" },
      { label: "Services", path: "/services" },
      { label: "Contact", path: "/contact" },
    ];
    setBreadcrumbs(breadCrumbsData);
  }, []); */ return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("nav", null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("ol", {
        className: "breadcrumbs"
    }, data.map((item, index)=>{
        const isLast = index === data.length - 1;
        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("li", {
            key: index
        }, isLast && isCurrentPage ? // Render the last breadcrumb as plain text when isCurrentPage is true
        /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", null, item.label) : /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("a", {
            href: item.path
        }, item.label), !isLast && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", {
            className: "separator"
        }, ">")));
    })));
};
Breadcrumb.__docgenInfo = {
    "description": "",
    "methods": [],
    "displayName": "Breadcrumb",
    "props": {
        "data": {
            "required": true,
            "tsType": {
                "name": "Array",
                "elements": [
                    {
                        "name": "Breadcrumb"
                    }
                ],
                "raw": "Breadcrumb[]"
            },
            "description": ""
        },
        "isCurrentPage": {
            "required": false,
            "tsType": {
                "name": "boolean"
            },
            "description": ""
        }
    }
};


/***/ })

});
//# sourceMappingURL=stories-Buttons-Button-stories.9f69b68de68b0c6b77c9.hot-update.js.map