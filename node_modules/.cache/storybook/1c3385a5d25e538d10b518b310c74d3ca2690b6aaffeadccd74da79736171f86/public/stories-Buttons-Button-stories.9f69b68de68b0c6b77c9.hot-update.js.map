{"version":3,"file":"stories-Buttons-Button-stories.9f69b68de68b0c6b77c9.hot-update.js","mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AAUA;AAIA;AACA;;;;;;;;AASA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAAA;AACA;AAAA;AAKA;AAIA","sources":["webpack://test-storybook-avig-dev/./src/stories/Breadcrumbs/Breadcrumb.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./breadcrumb.css\";\r\ninterface Breadcrumb {\r\n  label: string;\r\n  path: string;\r\n}\r\n\r\nexport interface breadCrumbProps {\r\n  data: Breadcrumb[];\r\n  isCurrentPage?: boolean;\r\n}\r\nexport const Breadcrumb: React.FC<breadCrumbProps> = ({\r\n  data,\r\n  isCurrentPage,\r\n}) => {\r\n  /*   const [breadCrumbs, setBreadcrumbs] = useState<Breadcrumb[]>([]);\r\n   */\r\n  /*  useEffect(() => {\r\n    const breadCrumbsData: Breadcrumb[] = [\r\n      { label: \"Home\", path: \"/\" },\r\n      { label: \"About\", path: \"/about\" },\r\n      { label: \"Services\", path: \"/services\" },\r\n      { label: \"Contact\", path: \"/contact\" },\r\n    ];\r\n    setBreadcrumbs(breadCrumbsData);\r\n  }, []); */\r\n  return (\r\n    <nav>\r\n      <ol className=\"breadcrumbs\">\r\n        {data.map((item, index) => {\r\n          const isLast = index === data.length - 1;\r\n          return (\r\n            <li key={index}>\r\n              {isLast && isCurrentPage ? (\r\n                // Render the last breadcrumb as plain text when isCurrentPage is true\r\n                <span>{item.label}</span>\r\n              ) : (\r\n                <>\r\n                  <a href={item.path}>{item.label}</a>\r\n                  {!isLast && <span className=\"separator\">&gt;</span>}\r\n                </>\r\n              )}\r\n            </li>\r\n          );\r\n        })}\r\n      </ol>\r\n    </nav>\r\n  );\r\n};\r\n"],"names":[],"sourceRoot":""}